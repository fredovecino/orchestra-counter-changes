@mixin sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    clip-path: inset(50%);
    border: 0;
}

$rem-baseline: 16px !default;
$rem-fallback: false !default;
$rem-px-only: false !default;
@function rem-separator($list, $separator: false) {
    @if $separator=="comma" or $separator=="space" {
        @return append($list, null, $separator);
    }
    @if function-exists("list-separator")==true {
        @return list-separator($list);
    } // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)
    $test-list: ();
    @each $item in $list {
        $test-list: append($test-list, $item, space);
    }
    @return if($test-list==$list, space, comma);
}

@mixin rem-baseline($zoom: 100%) {
    font-size: $zoom / 16px * $rem-baseline;
}

@function rem-convert($to, $values...) {
    $result: ();
    $separator: rem-separator($values);
    @each $value in $values {
        @if type-of($value)=="number" and unit($value)=="rem" and $to=="px" {
            $result: append($result, $value / 1rem * $rem-baseline + 0px, $separator);
        }
        @else if type-of($value)=="number" and unit($value)=="px" and $to=="rem" {
            $result: append($result, $value / $rem-baseline + 0rem, $separator);
        }
        @else if type-of($value)=="list" {
            $value-separator: rem-separator($value);
            $value: rem-convert($to, $value...);
            $value: rem-separator($value, $value-separator);
            $result: append($result, $value, $separator);
        }
        @else {
            $result: append($result, $value, $separator);
        }
    }
    @return if(length($result)==1, nth($result, 1), $result);
}

@function rem($values...) {
    @if $rem-px-only {
        @return rem-convert(px, $values...);
    }
    @else {
        @return rem-convert(rem, $values...);
    }
}

@mixin rem($properties, $values...) {
    @if type-of($properties)=="map" {
        @each $property in map-keys($properties) {
            @include rem($property, map-get($properties, $property));
        }
    }
    @else {
        @each $property in $properties {
            @if $rem-fallback or $rem-px-only {
                #{$property}: rem-convert(px, $values...);
            }
            @if not $rem-px-only {
                #{$property}: rem-convert(rem, $values...);
            }
        }
    }
}

@mixin make-card($background-color: $white, $radius: $standard-border-radius, $max-width: $standard-card-width) {
    position: relative;
    display: flex;
    flex-direction: column;
    min-height: $global-car-min-height;
    background-color: $background-color;
    border-radius: $radius;
    width: 90%;
    margin: auto;
    height: auto;
    padding: rem(40px 32px 32px);
    box-shadow: 0 3px 10px 0 rgba(0, 0, 0, 0.18);
    word-break: break-word;
    &__header-section {
        margin-bottom: rem($global-standard-margin);
    }
    &__content-section {
        margin-bottom: rem($global-standard-margin);
    }
    &__content-section-flex-grow {
        flex-grow: 1;
        flex-shrink: 2;
    }
    &__footer-section {
        display: flex;
        flex-wrap: wrap;
        &--align-right {
            justify-content: flex-end;
        }
        &--space-between {
            justify-content: space-between;
        }
    } // Modifiers
    &--one-more {
        &:before {
            content: "";
            position: absolute;
            top: -16px;
            left: 50%;
            transform: translateX(-50%);
            width: 90%;
            height: 16px;
            border-top-left-radius: rem($standard-border-radius);
            border-top-right-radius: rem($standard-border-radius);
            background: $light-transparent42;
        }
    }
    &--more-than-one {
        &:before,
        &:after {
            content: "";
            position: absolute;
            left: 50%;
            height: 16px;
            border-top-left-radius: rem($standard-border-radius);
            border-top-right-radius: rem($standard-border-radius);
            transform: translateX(-50%);
        }
        &:before {
            width: 90%;
            top: -16px;
            background: $light-transparent42;
        }
        &:after {
            width: 80%;
            top: -32px;
            background: $light-transparent12;
        }
    }
}

@mixin default-card-modal-layout {
    .qm-card__header-section {
        color: $dark-transparent82;
        font-family: $font-family;
        font-size: rem(28px);
        font-weight: 300;
        line-height: rem(32px);
        margin-bottom: rem(18px);
        @at-root [dir='rtl'] & {
            text-align: right;
        }
    }
    .qm-card__content-section {
        padding: rem(25px) 0 rem(10px) 0;
        font-size: rem(24px);
        font-weight: 300;
        color: $dark-transparent82;
    }
    .qm-btns-container {
        width: 100%;
        font-size: rem(18px);
        padding: 0;
    }
}

@mixin set-default-list-card-layout {
    .qm-card {
        &__header-section {
            margin-bottom: 0;
            .qm-card-header {
                &__headline {
                    color: $dark-transparent82;
                    font-size: rem(28px);
                    font-weight: 300;
                    line-height: rem(32px);
                    margin-bottom: rem(15px);
                    &__back-icon {
                        cursor: pointer;
                        i {
                            &:before {
                                font-size: rem(22px);
                                vertical-align: middle;
                            }
                        }
                        margin-right: rem(10px);
                        margin-left: 0;
                        @at-root [dir='rtl'] & {
                            margin-right: 0;
                            margin-left: rem(10px);
                        }
                        color: $dark-transparent82;
                    }
                }
                &__sub-heading {
                    color: $dark-transparent82;
                    font-size: rem(20px);
                    font-weight: 300;
                    line-height: rem(24px);
                    margin-bottom: rem(12px);
                    @at-root [dir='rtl'] & {
                        text-align: right;
                    }
                }
            }
        }
        &__content-section {
            * {
                &:focus {
                    outline: 0;
                }
            }
            flex-grow: 1;
            overflow: auto;
            .dataTables_scrollHeadInner {
                width: 100% !important;
            }
            .dataTables_scrollHeadInner {
                thead {
                    tr {
                        position: relative;
                        &.table-header__border {
                            &:after {
                                content: "";
                                width: 100%;
                                height: 2px;
                                display: block;
                                left: 0;
                                bottom: 0;
                                background: $dark-transparent12;
                                position: absolute;
                            }
                        }
                        th {
                            color: $dark-transparent62;
                            font-weight: 500;
                            font-size: rem(12px);
                            line-height: rem(30px);
                            border-bottom: 0;
                            &.sorting {
                                background: $white;
                                position: relative;
                                &:after {
                                    content: "";
                                    font-family: 'icomoon';
                                    color: $dark-transparent82;
                                    width: 10px;
                                    position: absolute;
                                    right: 0;
                                }
                            }
                            &.sorting_desc {
                                background: $white;
                                position: relative;
                                &:after {
                                    content: "";
                                    font-family: 'icomoon';
                                    color: $dark-transparent82;
                                    ;
                                    width: 10px;
                                    position: absolute;
                                    right: 0;
                                }
                            }
                            &.sorting_asc {
                                background: $white;
                                position: relative;
                                &:after {
                                    content: "";
                                    font-family: 'icomoon';
                                    color: $dark-transparent82;
                                    width: 10px;
                                    position: absolute;
                                    right: 0;
                                }
                            }
                        }
                    }
                }
            }
            .dataTable {
                color: $dark-transparent82;
                font-family: $font-family;
                font-size: rem(18px);
                font-weight: 300;
                width: 100% !important;
                table-layout: fixed;
                tbody {
                    td {
                        padding: rem(10px) !important;
                        background: transparent;
                        border: none !important;
                    }
                    tr {
                        background: $white;
                        &:hover {
                            background: $dark-transparent04;
                        }
                    }
                }
            }
            .dataTables_info {
                display: none;
            }
        }
        &__footer-section {
            margin-top: rem(30px);
        }
    }

}

@mixin set-default-height-for-card-layout {
    // max-height: rem(calc(100vh - 400px));
    // height: rem(calc(100vh - 400px));
}

@mixin set-default-width-for-card-layout {
    // max-width: 500px;
    // width: 100%;
    // margin: 0 auto;
}
