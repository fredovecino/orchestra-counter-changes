<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Counter</title>
    {% include "partials/external-links.nunjucks" %}
</head>

<!-- Imported partials -->
{% import "partials/button.nunjucks" as button  %}

<body>
    <div class="qm-app">
        <!-- Qmatic Header -->
        {% include "partials/global-header.nunjucks" %}
       
        <!-- Qmatic Main -->
        <main class="qm-main">

            <!-- Qmatic Main Left -->
            <div class="qm-main__left">
                <div class="qm-card-layout">
                    {# {% include "partials/closed-card.nunjucks" %} #}
                    {% include "partials/visit-card.nunjucks" %}
                    {# {% include "partials/ds-card.nunjucks" %} #}
                    {# {% include "partials/mark-card.nunjucks" %} #}
                </div>

                <!-- Qmatic Action Bar -->
                {% include "partials/action-bar.nunjucks" %}
            </div>


            <!-- Qmatic Main Right -->
            <div class="qm-main__right">
                {% include "partials/pools.nunjucks" %}
                {% include "partials/queue-tabs.nunjucks" %}
            </div>
        </main>
        <footer class="qm-footer">
            <div class="qm-footer__content">
                {% include "partials/footer.nunjucks" %}
            </div>
        </footer>
    </div>

    <div class="qm-popovers qm-hide" aria-hidden="true">
        {% include "partials/popover-views/popover-action.nunjucks" %}
    </div>
    <div class=""></div>
    {% include "partials/previous_counter.nunjucks" %}



    <!-- Modal Views -->
    <div id="qm-modal-nav" class="qm-modal-nav hide-on-load">
        {% include "partials/modals/profileSettings/profile-settings.nunjucks" %}
        {% include "partials/modals/noWaitingCustomers/no-waiting-customers.nunjucks" %}
    </div>
    



    <script type="text/javascript">
            $(document).ready(function() {
                // If we ever, ever, end up with a 401, we are either timedout due to inactivity
                // or just plain evil. Anyway we should be logged out.
                $.ajaxSetup( {
                    cache : false,
                    statusCode : {
                        401: function() {
                            location.href = "/logout.jsp";
                        }
                    }
                });

                init.init();

                // Temporary toggle of pools - Move this to a better location and make better implementaion
                $('.qm-pool__toggle-btn').on('click', function (e) {
                    $(this).closest('.qm-pool').toggleClass('qm-pool--is-open');
                });
                
                
                function QmPopover (popTarget, template) {
                    this.template = template;
                    this.target = popTarget;
                    this.navigationStack = [];
                    this.views = {
                        ACTION_BAR: 'action-bar',
                        TRANSFER_SELECTION: 'transfer-selection'
                    }
                };

                QmPopover.prototype = {
                    init: function () {
                        this.instance = new Tooltip(this.target, {
                            container: document.body,
                            trigger: 'manual',
                            title: ' ',
                            placement: 'bottom-start',
                            template: this.template,
                            offset: '0, 10'
                        });

                        this._attachTargetEventListeners();
                    },
                    _attachTemplateEvents: function () {
                        var closeBtns = this.instance._tooltipNode.querySelectorAll('.js-popover-close'),
                            transferBtn = this.instance._tooltipNode.querySelector('.js-popover-transfer'),
                            backBtns = this.instance._tooltipNode.querySelectorAll('.js-popover-back');

                        for(var i = 0; i < closeBtns.length; i ++) {
                            closeBtns[i].addEventListener('click', this._toggleInstance.bind(this));
                        }

                        for(var j = 0; j < backBtns.length; j ++) {
                            backBtns[j].addEventListener('click', this._navigateBack.bind(this));
                        }
                        
                        transferBtn.addEventListener('click', this._navigateTo.bind(this, this.views.TRANSFER_SELECTION));
                        
                    },
                    _stackHasPreviousView: function () {
                        return this.navigationStack.length > 1
                    },
                    _getLatestAddedView: function () {
                        return this.navigationStack[this.navigationStack.length - 1]
                    },
                    _navigateBack: function () {
                        if(this._stackHasPreviousView()) {
                            this._hideView(this.navigationStack.pop());
                            this._navigate();
                        }
                    },
                    _navigateTo: function (view) {
                        this.navigationStack.push(view);
                        this._navigate();
                    },
                    _navigate: function () {
                        var nextView = this._getLatestAddedView();
                        var lastView = this._stackHasPreviousView() ? 
                                        this.navigationStack[this.navigationStack.length - 2] : '';

                        this._hideView(lastView);
                        this._showView(nextView);
                    },
                    _showView: function (view) {
                        this.instance._tooltipNode.classList.add('popover-show--' + view);
                    },
                    _hideView: function (view) {
                        this.instance._tooltipNode.classList.remove('popover-show--' + view);
                    },
                    _toggleAndAttachPopoverTemplateEvents: function (e) {
                        var shouldAttachCloseEvent = this.instance._tooltipNode ? false : true; 
                        this._toggleInstance(e);
                        this._navigateTo(this.views.ACTION_BAR);

                        if(shouldAttachCloseEvent) {
                            this._attachTemplateEvents();
                        }
                    },
                    _attachTargetEventListeners: function () {
                        this.target.addEventListener('click', this._toggleAndAttachPopoverTemplateEvents.bind(this));
                    },
                    _toggleInstance: function (e) {
                        e.preventDefault();

                        if(this.instance._isOpen) {
                            // Clean up navigation
                            var lastVisitedView = this._getLatestAddedView();
                            this._hideView(lastVisitedView);
                            this.navigationStack = [];
                        }

                        this.instance.toggle();
                    }
                }

                // Init Action popovers
                // Ref
                var actionPopoverTargets = document.querySelectorAll('[data-toggle="popover"]');
                // Template
                var actionPopoverTemplate = document.querySelector('.qm-popover').outerHTML.trim();

                for(var i = 0; i < actionPopoverTargets.length; i++) {
                    var popover = new QmPopover(actionPopoverTargets[i], actionPopoverTemplate);
                    popover.init();
                }

                // TABS
                var tabConfig = {
                    tabComponentId: 'js-qm-tabs'
                };
                
                window.$Qmatic.components.tabs(tabConfig);
			});
        </script>
</body>

</html>
